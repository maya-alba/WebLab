# coding: utf-8
from django.contrib.auth.models import User
from django.contrib.auth.decorators import login_required
from django.http import HttpResponse, HttpResponseRedirect
from django.shortcuts import render_to_response
from django.template import RequestContext
from django.views.decorators.cache import never_cache
from models import *
from forms import *

def home(request):
    return render_to_response('index.html',
        {},
        context_instance=RequestContext(request)
    )

def account(request):
    return render_to_response('account.html',
        {},
        context_instance=RequestContext(request)
    )

def categories(request):
    return render_to_response('categories.html',
        {
            "user": request.user,
            "service_types": SERVICE_TYPES,
        },
        context_instance=RequestContext(request)
    )

def checkout(request):
    return render_to_response('checkout.html',
        {},
        context_instance=RequestContext(request)
    )

def editservice(request):
    return render_to_response('editservice.html',
        {},
        context_instance=RequestContext(request)
    )

@login_required(login_url='/login/')
def myinfoaccount(request):
    if request.POST:
        edit_form = EditProfile(request.POST)
        if edit_form.is_valid():
            user_name = edit_form.cleaned_data['user_name']
            user_last_name = edit_form.cleaned_data['user_last_name']
            user_password = edit_form.cleaned_data['user_password']
            user = User.objects.get(id = request.user.id)
            if user_name:
                user.first_name = user_name
            if user_last_name:
                user.last_name = user_last_name
            if user_password:
                user.set_password(user_password)
            user.save()
            message = "Modificación exitosa"
            return render_to_response('myinfoaccount.html',
                {
                    "return_message": message,
                    "user": request.user,
                    "edit_form": edit_form
                },
                context_instance=RequestContext(request)
            )
    else:
        edit_form = EditProfile()
    return render_to_response('myinfoaccount.html',
        {
            "user": request.user,
            "edit_form":  edit_form
        },
        context_instance=RequestContext(request)
    )

def myservices(request):
    return render_to_response('myservices.html',
        {},
        context_instance=RequestContext(request)
    )

def offerservice(request):
    return render_to_response('offerservice.html',
        context_instance=RequestContext(request)
    )

def profile(request):
    return HttpResponseRedirect('/myinfoaccount')

def register(request):
    if request.POST:
        register_form = RegisterForm(request.POST)
        if register_form.is_valid():
            user_name = register_form.cleaned_data['user_name']
            user_lname = register_form.cleaned_data['user_lname']
            email = register_form.cleaned_data['email']
            user_password = register_form.cleaned_data['user_password']
            user, created = User.objects.get_or_create(username = email)
            if not created:
                message = u"<p>Lo sentimos, pero el usuario " + email + u" ya se encuentra registrado.<br/>"
                message += u"Si has olvidado tu contraseña, da click <a href='/reset_password/"+ email + u"'>aquí</a>"
                message += u" para reestablecerla.</p>"
                return render_to_response('register.html',
                    {"message_return": message},
                    context_instance=RequestContext(request)
                )
            user.first_name = user_name
            user.last_name = user_lname
            user.email = email
            user.is_active = True
            user.set_password(user_password)
            user.save()
            message = "<p>Gracias por registrarte.</p>"
            return render_to_response('register.html',
                {"message_return": message},
                context_instance=RequestContext(request)
            )
    else:
        register_form = RegisterForm()
    return render_to_response('register.html',
        {"register_form": register_form},
        context_instance=RequestContext(request)
    )

def saleshistory(request):
    return render_to_response('saleshistory.html',
        {},
        context_instance=RequestContext(request)
    )

def serviceoverview(request):
    return render_to_response('serviceoverview.html',
        {},
        context_instance=RequestContext(request)
    )

def servicelist(request, service):
    return render_to_response('servicelist.html',
        {},
        context_instance=RequestContext(request)
    )

def shophistory(request):
    return render_to_response('shophistory.html',
        {},
        context_instance=RequestContext(request)
    )
